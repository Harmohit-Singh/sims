% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sims-nlist.R
\name{sims_nlist}
\alias{sims_nlist}
\title{Simulate nlists Object}
\usage{
sims_nlist(code, constants = nlist::nlist(),
  parameters = nlist::nlist(), monitor = ".*",
  nsims = getOption("sims.nsims", 100L), silent = FALSE)
}
\arguments{
\item{code}{A string of the JAGS code to generate the data.
The code must not be in a data or model block.}

\item{constants}{An nlist specifying values in code that are output in 
the data. The values are included in the output data.}

\item{parameters}{An nlist specifying values in code that are not output
in the data. The values are not included in the output data.}

\item{monitor}{A character vector (or regular expression if a string) 
specifying the names of the stochastic nodes in code to include in the data.
By default all stochastic nodes are included.}

\item{nsims}{A positive integer between 1 and 100,000 specifying 
the number of data sets to simulate. By default 100 data sets are simulated.}

\item{silent}{A flag specifying whether to suppress warnings.}
}
\value{
An \code{\link[nlist]{nlists}} object where each element represents
a simulated data set.
}
\description{
Both constants and parameters are nlist objects or 
uniquely named lists of numeric vectors, matrices and arrays that can be
coerced to nlist objects.
The only difference between constants and parameters is that the values in 
constants are appended to the output data while the values in parameters are not.
Neither constants or parameters can include missing values nor can they 
have elements with the same name.
Elements which are not in code are dropped with a warning.
}
\examples{
set.seed(101)
sims_nlist("a ~ dunif(0, 1)")
}
